// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header Component renders correctly 1`] = `
<View
  style={
    [
      {
        "flexDirection": "row",
        "justifyContent": "space-between",
        "width": "100%",
      },
      {
        "paddingTop": 20,
      },
    ]
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginHorizontal": 10,
        "opacity": 1,
      }
    }
    testID="location-button"
  >
    <Image
      resizeMode="contain"
      source="mock-location-icon"
      style={
        [
          {
            "height": 20,
            "marginHorizontal": 10,
            "width": 20,
          },
          {
            "tintColor": "#0ff",
          },
        ]
      }
    />
    <Text
      accessibilityLabel="header-country"
      ellipsizeMode="tail"
      numberOfLines={1}
      style={
        [
          {
            "fontFamily": "Manrope-SemiBold",
            "fontSize": 22,
          },
          {
            "color": "#0ff",
          },
        ]
      }
      testID="header-country"
    >
      Colombo
       (
      LK
      )
    </Text>
    <Image
      resizeMode="contain"
      source="mock-chevron-icon"
      style={
        [
          {
            "height": 35,
            "marginTop": 5,
            "width": 35,
          },
          {
            "tintColor": "#0ff",
          },
        ]
      }
    />
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginHorizontal": 10,
        "opacity": 1,
      }
    }
    testID="reload-button"
  >
    <Image
      resizeMode="contain"
      source="mock-reload-icon"
      style={
        [
          {
            "height": 20,
            "marginHorizontal": 10,
            "width": 20,
          },
          {
            "tintColor": "#0ff",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`Header Component should renders correctly 1`] = `
<View
  style={
    [
      {
        "flexDirection": "row",
        "justifyContent": "space-between",
        "width": "100%",
      },
      {
        "paddingTop": 20,
      },
    ]
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginHorizontal": 10,
        "opacity": 1,
      }
    }
    testID="location-button"
  >
    <Image
      resizeMode="contain"
      source="mock-location-icon"
      style={
        [
          {
            "height": 20,
            "marginHorizontal": 10,
            "width": 20,
          },
          {
            "tintColor": "#0ff",
          },
        ]
      }
    />
    <Text
      accessibilityLabel="header-country"
      ellipsizeMode="tail"
      numberOfLines={1}
      style={
        [
          {
            "fontFamily": "Manrope-SemiBold",
            "fontSize": 22,
          },
          {
            "color": "#0ff",
          },
        ]
      }
      testID="header-country"
    >
      Colombo
       (
      LK
      )
    </Text>
    <Image
      resizeMode="contain"
      source="mock-chevron-icon"
      style={
        [
          {
            "height": 35,
            "marginTop": 5,
            "width": 35,
          },
          {
            "tintColor": "#0ff",
          },
        ]
      }
    />
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginHorizontal": 10,
        "opacity": 1,
      }
    }
    testID="reload-button"
  >
    <Image
      resizeMode="contain"
      source="mock-reload-icon"
      style={
        [
          {
            "height": 20,
            "marginHorizontal": 10,
            "width": 20,
          },
          {
            "tintColor": "#0ff",
          },
        ]
      }
    />
  </View>
</View>
`;
